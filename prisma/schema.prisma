// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // SupabaseのデータベースURLを指定
}

model User {
  id            BigInt    @id @default(autoincrement())
  username      String    @unique
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  activities    UserActivity[]
  tasks         Task[]
  reports       Report[]
  sessions      Session[]
  auditLogs     AuditLog[] @relation("PerformedBy")
}

model UserActivity {
  id          BigInt    @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      BigInt
  activityType String
  description String?
  createdAt   DateTime  @default(now())
}

model Task {
  id          BigInt    @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      BigInt
  title       String
  description String?
  status      TaskStatus @default(pending)
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Report {
  id          BigInt    @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      BigInt
  reportType  String
  data        Json
  createdAt   DateTime  @default(now())
}

model Session {
  id          BigInt    @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      BigInt
  token       String    @unique
  expiresAt   DateTime
  createdAt   DateTime  @default(now())
}

model AuditLog {
  id          BigInt    @id @default(autoincrement())
  actionType  String
  description String?
  performedBy User      @relation("PerformedBy", fields: [userId], references: [id])
  userId      BigInt
  targetId    BigInt?
  createdAt   DateTime  @default(now())

  @@index([userId])
}

enum TaskStatus {
  pending
  in_progress
  completed
}
